{
  "name": "refactorix",
  "description": "TypeScript refactoring tools for Visual Studio Code",
  "version": "0.3.6",
  "publisher": "krizzdewizz",
  "engines": {
    "vscode": "^1.11.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "doc/logo.png",
  "bugs": {
    "url": "https://github.com/krizzdewizz/vscode-refactorix/issues"
  },
  "homepage": "https://github.com/krizzdewizz/vscode-refactorix",
  "repository": {
    "type": "git",
    "url": "https://github.com/krizzdewizz/vscode-refactorix.git"
  },
  "activationEvents": [
    "onLanguage:typescript"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Refactorix configuration",
      "properties": {
        "extension.refactorix.Property.ToGetterSetter": {
          "type": "object",
          "title": "Refactorix property getter/setter configuration",
          "properties": {
            "prefix": {
              "type": "string",
              "default": "_",
              "description": "Prefix to add to the property."
            },
            "singleLine": {
              "type": "boolean",
              "default": false,
              "description": "Whether to put getter/setter on a single line"
            }
          }
        },
        "extension.refactorix.ExtractVariable": {
          "type": "object",
          "title": "Refactorix extract variable configuration",
          "properties": {
            "noSemicolon": {
              "type": "boolean",
              "default": false,
              "description": "Whether to add a semicolon to the extracted expression."
            }
          }
        },
        "extension.refactorix.Access.toggle": {
          "type": "object",
          "title": "Refactorix access toggle configuration",
          "properties": {
            "preferPublic": {
              "type": "boolean",
              "default": false,
              "description": "Whether to add or ommit the 'public' keyword."
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "extension.refactorix.SplitVariableDeclaration",
        "title": "x: Split variable declaration"
      },
      {
        "command": "extension.refactorix.ExtractVariable",
        "title": "x: Extract variable"
      },
      {
        "command": "extension.refactorix.ArrowFunction.ToggleSingleStatementBlockExpression",
        "title": "x: Arrow function toggle single statement block <-> expression"
      },
      {
        "command": "extension.refactorix.ArrowFunction.SingleStatementBlockToExpressionAll",
        "title": "x: Arrow function all single statement blocks to expression"
      },
      {
        "command": "extension.refactorix.Semicolons.Add",
        "title": "x: Add semicolons"
      },
      {
        "command": "extension.refactorix.Semicolons.Remove",
        "title": "x: Remove semicolons"
      },
      {
        "command": "extension.refactorix.Property.ToGetterSetter",
        "title": "x: Property to getter/setter"
      },
      {
        "command": "extension.refactorix.String.Interpolate",
        "title": "x: Interpolate string part"
      },
      {
        "command": "extension.refactorix.Access.toggle",
        "title": "x: Toggle access modifier"
      }
    ],
    "keybindings": [
      {
        "command": "extension.refactorix.Semicolons.Add",
        "key": "ctrl+;",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.Semicolons.Remove",
        "key": "ctrl+shift+;",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.ArrowFunction.ToggleSingleStatementBlockExpression",
        "key": "ctrl+]",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.ArrowFunction.SingleStatementBlockToExpressionAll",
        "key": "ctrl+shift+]",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.ExtractVariable",
        "key": "alt+shift+l",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.String.Interpolate",
        "key": "shift+alt+x i",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.refactorix.Property.ToGetterSetter",
        "key": "shift+alt+x g",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+shift+q",
        "command": "extension.refactorix.Access.toggle",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+alt+x s",
        "command": "extension.refactorix.SplitVariableDeclaration",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "dependencies": {
    "typescript": "*"
  },
  "devDependencies": {
    "tslint": "*",
    "tslint-microsoft-contrib": "*",
    "vscode": "^1.0.0",
    "@types/node": "^6.0.40",
    "@types/jasmine": "*",
    "jasmine": "*"
  }
}